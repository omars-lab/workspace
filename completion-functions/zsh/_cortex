#compdef cortex

local line # This is an array of the currently fully typed line ...
local state
local cortex_commands
local cortex_sub_commands

cortex_commands=$(cortex --help | grep '\[cmd\]' | sed 's/\[cmd\].*//g' | egrep -o "[a-zA-Z]+" | xargs echo)
_arguments "1: :(${cortex_commands})" '2: :->subcommand' '3: :->arg_for_subcommand'

# https://mrigank11.github.io/2018/03/zsh-auto-completion/
case $state in
    subcommand)
	compadd $(cortex $line[1] --help | \
	  tail -n+9 | grep '\[options\]' | sed 's/\[options\].*//g' | egrep -o "[a-zA-Z-]+" \
	  | xargs echo)
	# _files
	# _path_files
        ;;
    arg_for_subcommand)
      case $line[2] in
	save*)
	  _path_files
	  ;;
	publish*)
	  _path_files
	  ;;
	describe-schema)
	  compadd $(cortex profiles list-schemas --json | jq '.[] | .name' | xargs echo)
	  ;;
	describe-schema)
	  compadd $(cortex profiles list-schemas --json | jq '.[] | .name' | xargs echo)
	  ;;
	*)
	  compadd $(cortex $line[1] $line[2] --help | egrep -o "\-\-[a-zA-Z-]+" | xargs echo)
	  ;;
      esac
        # compadd one two #this could be done above also, in _arguments, you know how :)
        # _files
      ;;
esac
