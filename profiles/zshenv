#!/bin/zsh

source $(dirname $(dirname $(readlink ${HOME}/.zshenv)))/../workspace-career/functions.sh

function utc_now(){
  date -u +"%Y-%m-%dT%H:%M:%SZ"
}

function utc_from_seconds(){
  date -u -r ${1} +"%Y-%m-%dT%H:%M:%SZ"
}

function utc_from_miliseconds(){
  utc_from_seconds $(expr ${1} / 1000)
}

function noteplan_date_now(){
  date +"@done(%Y-%m-%d %I:%M %p)"
}

function pip_latest_versions(){
  pip install ${1}== 2>&1 | egrep -o '[0-9]+.[0-9]+.[0-9]+([ab]|dev|rc)([0-9]+)?'
}

# function switch_to_conda_env(){
#   echo $CONDA_DEFAULT_ENV | grep "\b${1}\b" || conda deactivate
#   echo $CONDA_DEFAULT_ENV | grep "\b${1}\b" || conda activate "${1}"
# }

function open_in_tab() {
  open -na "Google Chrome" --args --new-tab "${1}"
}

function open_git_repo_in_tab() {
  (git config --get remote.origin.url | grep github) &&
    open_github_repo_in_tab || open_bitbucket_repo_in_tab
}

function open_github_repo_in_tab() {
  local REPO_URL=$(git config --get remote.origin.url \
      | sed 's#git@github.com:#https://github.com/#g' \
      | sed "s#.git\$#/tree/$(git rev-parse --abbrev-ref HEAD)#g" \
  )
  echo "Opening Github Repo: ${REPO_URL}"
  open_in_tab "${REPO_URL}"
}

function open_bitbucket_repo_in_tab() {
  local REPO_URL=$(git config --get remote.origin.url \
      | sed 's#git@bitbucket.org:#https://bitbucket.org/#g' \
      | sed "s#.git\$#/src/$(git rev-parse --abbrev-ref HEAD)#g" \
  )
  echo "Opening Bitbucket Repo: ${REPO_URL}"
  open_in_tab "${REPO_URL}"
}

function touch_makefile() {
  echo 'SHELL := /bin/bash'
  echo 'MAKEFILE_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))'
}

function reset_cortex_profiles() {
  cortex_cli_command v3/graph/_/db/reset -X PUT
}

function pip-versions(){
  local PACKAGE=${1}
  pip install "${PACKAGE}==" 2>&1 | grep "${PACKAGE}" \
    | grep -E -o '([0-9]+.)?[0-9]+.[0-9]+([-a-zA-Z]+[0-9]+)?' | sort -r
}

function create_python_sdk_virtual_env(){
  # _____________________________________________________ This skips alpha/beta versions. _________
  LATEST_SDK_VER=$(pip-versions cortex-client | grep -E -o '^[0-9]+[.][0-9]+[.][0-9]+$' | head -n 1)
  conda create -f -y -n cortex-sdk-${LATEST_SDK_VER} python=3.7 pip
  # conda 4.5 does not have the stack flag on activate, 4.7 does though ...
  conda activate --stack cortex-sdk-7.1.0
  pip install cortex-client==${LATEST_SDK_VER}
}

function first(){
  if [[ "$#" == "0" ]]; then
    echo "No files satisfied" >&2
    return
  fi

  if [[ -f "${1}" ]]; then
    echo "${1}"
    return
  fi

  if [[ -d "${1}" ]]; then
    echo "${1}"
    return
  fi

  shift
  first $@
}

function new_image() {
  COLOR="${COLOR:-transparent}"
  IMAGE_PATH="${1:-${COLOR}.png}"
  CANVAS_SIZE="${CANVAS_SIZE:-1000}"
  echo "Creating image with name:${IMAGE_PATH}, color:${COLOR}, and size :${CANVAS_SIZE}"
  # https://stackoverflow.com/questions/39504522/create-blank-image-in-imagemagick
  convert -size ${CANVAS_SIZE}x${CANVAS_SIZE} xc:${COLOR} "${IMAGE_PATH}"
  open -a Preview "${IMAGE_PATH}"
}

precmd_functions=(week_prompt)
