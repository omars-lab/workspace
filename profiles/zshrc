# set -x

# Path to your oh-my-zsh installation.
export ZSH=/Users/$(whoami)/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="bira"

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"
HIST_STAMPS="yyyy-mm-dd"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git docker osx brew node npm python zsh-completions kubectl history conda)

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# ------------------------------------------------------------------------------

# User configuration

export DEFAULT_CONDA_ENV=py3
export ZSH_DISABLE_COMPFIX=true

# The following assumes that ~/.zshrc is a symbolic link to the environment dir ...
source $(dirname $(dirname $(readlink ${HOME}/.zshrc)))/loader.sh
source ${ZSH}/oh-my-zsh.sh

if [[ ! -d ${HOME}/.oh-my-zsh/plugins/antigen/ ]] ; then
	git clone https://github.com/zsh-users/antigen.git ${HOME}/.oh-my-zsh/plugins/antigen/
fi

source ${HOME}/.oh-my-zsh/plugins/antigen/antigen.zsh

# https://github.com/unixorn/awesome-zsh-plugins/blob/master/README.md#installation
antigen bundle Tarrasch/zsh-autoenv
antigen bundle softmoth/zsh-vim-mode
# https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md
# order important!
antigen bundle zsh-users/zsh-syntax-highlighting
antigen apply

# antigen bundle mafredri/zsh-async
# https://github.com/sindresorhus/pure
# antigen bundle sindresorhus/pure

# https://direnv.net/
# eval "$(direnv hook zsh)"


# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Getting all the nix stuff loaded!
# . /Users/$(whoami)/.nix-profile/etc/profile.d/nix.sh

# Unset Var that throws Brew off
  unset SSL_CERT_FILE

# Load Auto Jump
  [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh

# Loading iterm zsh integration
  source "${DIR_FOR_BINARIES}/iterm2_shell_integration.zsh"

# Load zsh completion scripts
# https://github.com/zsh-users/zsh-completions/issues/277#issuecomment-414139674
  fpath=(${DIRS_ENVIRONMENT}/completion-functions/zsh $fpath)
  fpath=(${DIRS_ENVIRONMENT}/../workspace-career/completion-functions/zsh $fpath)
  rm -f "$HOME/.zcompdump"; 
  autoload -U compinit
  # https://stackoverflow.com/questions/13762280/zsh-compinit-insecure-directories
  compinit -u

# set -o vi
# source $(brew --prefix autoenv)/activate.sh

### Added by the Bluemix CLI
# source /usr/local/Bluemix/bx/zsh_autocomplete

export M2_HOME=/usr/local/Cellar/maven/3.6.0/libexec
export M2=${M2_HOME}/bin
export PATH=${PATH}:${M2_HOME}/bin


export LDFLAGS="-L/usr/local/opt/libffi/lib -L/usr/local/opt/gettext/lib"
export PATH="/usr/local/opt/gettext/bin:$PATH"
export CPPFLAGS="-I/usr/local/opt/gettext/include"

export PATH="/usr/local/pgsql/bin/:$PATH"

if [[ -d $HOME/.asdf/ ]] ; then 
	. $HOME/.asdf/asdf.sh
	. $HOME/.asdf/completions/asdf.bash
fi

# https://github.com/sickill/stderred
# export DYLD_INSERT_LIBRARIES="/Users/oeid/Workspace/git/stderred/build/libstderred.dylib${DYLD_INSERT_LIBRARIES:+:$DYLD_INSERT_LIBRARIES}"
# export DYLD_FORCE_FLAT_NAMESPACE=1

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/oeid/Workspace/binaries/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/oeid/Workspace/binaries/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/oeid/Workspace/binaries/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/oeid/Workspace/binaries/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

echo "Activating Conda Env: [${DEFAULT_CONDA_ENV}]" && conda activate ${DEFAULT_CONDA_ENV} --stack

# Activate Virtual Envs
nvm use ${DEFAULT_NVM_ENV}

alias openscad='/Applications/OpenSCAD.app/Contents/MacOS/OpenSCAD'

bindkey -v
# https://stackoverflow.com/questions/58187542/how-to-setup-vi-editing-mode-for-zsh#:~:text=bindkey%20%2Dv%20is%20enough%20to,%22insert%22%20mode%20by%20default.
